Problem Statement :
An integer n is strictly palindromic if, for every base b between 2 and n - 2 (inclusive), the string representation of the integer n in base b is palindromic.
Given an integer n, return true if n is strictly palindromic and false otherwise.
A string is palindromic if it reads the same forward and backward.
Input: n = 9
Output: false
Explanation: In base 2: 9 = 1001 (base 2), which is palindromic.
In base 3: 9 = 100 (base 3), which is not palindromic.
Therefore, 9 is not strictly palindromic so we return false.
Note that in bases 4, 5, 6, and 7, n = 9 is also not palindromic.

Problem Statement Link :
https://leetcode.com/problems/strictly-palindromic-number/description/?source=submission-noac

Solution :
class Solution {
public:
    bool isStrictlyPalindromic(int n) 
    {
        string base_2 = "";
        string base_3 = "";

        int num = n;
        string str = to_string(num);

        while (n != 0) {
            base_2 += (n % 2);
            n /= 2;
        }

        n = num;


        while (n != 0) {
            base_3 += (n % 3);
            n /= 3;
        }

        string rbase_2 = base_2;
        reverse(rbase_2.begin(), rbase_2.end());

        string rbase_3 = base_3;
        reverse(rbase_3.begin(), rbase_3.end());

        return ((rbase_2 == base_2) && (rbase_3 == base_3));
    }
};
