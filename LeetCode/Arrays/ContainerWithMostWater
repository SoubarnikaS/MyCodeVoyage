Problem Statement :
You are given an integer array height of length n. There are n vertical lines drawn such that the two endpoints of the ith line are (i, 0) and (i, height[i]).
Find two lines that together with the x-axis form a container, such that the container contains the most water.
Return the maximum amount of water a container can store.
Input: array = [3, 1, 2, 4, 5]
Output: 12
Explanation : 
5 and 3 are distance 4 apart. 
So the size of the base = 4. 
Height of container = min(5, 3) = 3. 
So total area = 4 * 3 = 12

Problem Statement Link :
https://leetcode.com/problems/container-with-most-water

Solution :
class Solution {
public:
    int maxArea(vector<int>& height) {
        int area = 0, i = 0, j = height.size() - 1;
        while(i < j)
        {
            area = max(area,min(height[i],height[j]) * (j - i));
            if(height[i] < height[j])
                i++;
            else
                j--;

        }

        return area;
    }
};
