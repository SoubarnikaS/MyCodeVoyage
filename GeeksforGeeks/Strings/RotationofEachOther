Problem Statement :
You are given two strings of equal lengths, s1 and s2. The task is to check if s2 is a rotated version of the string s1.
Input:
geeksforgeeks
forgeeksgeeks
Output: 
1
Explanation: s1 is geeksforgeeks, s2 is
forgeeksgeeks. Clearly, s2 is a rotated
version of s1 as s2 can be obtained by
left-rotating s1 by 5 units.

Problem Statement Link :
https://www.geeksforgeeks.org/problems/check-if-strings-are-rotations-of-each-other-or-not-1587115620/1?utm_source=geeksforgeeks&utm_medium=article_practice_tab&utm_campaign=article_practice_tab

Solution 1 :

class Solution
{
    public:
    //Function to check if two strings are rotations of each other or not.
    bool areRotations(string s1,string s2)
    {
        int k = s1.length(), start = 0;
        
       for (int i = 0; i < s1.length(); i++)
        {
            if (s1 == s2)
                return true;

            char start = s1[0];

            for (int j = 1; j < s1.length(); j++)
                s1[j - 1] = s1[j];

            s1[s1.length() - 1] = start;
        }
    }
};

Solution 2 :



class Solution
{
    //Function to check if two strings are rotations of each other or not.
    public static boolean areRotations(String s1, String s2 )
    {
        return ((s1+s1).contains(s2));
    }
    
}
